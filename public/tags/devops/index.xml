<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on Anh&#39;s Tech Blog</title>
    <link>https://blog.aaanh.com/tags/devops/</link>
    <description>Recent content in devops on Anh&#39;s Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jul 2022 00:30:00 +0000</lastBuildDate><atom:link href="https://blog.aaanh.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Google Cloud Platform Bonanza - Cloud Run</title>
      <link>https://blog.aaanh.com/posts/google-cloud-run-bonanza/</link>
      <pubDate>Sat, 02 Jul 2022 00:30:00 +0000</pubDate>
      
      <guid>https://blog.aaanh.com/posts/google-cloud-run-bonanza/</guid>
      <description>Why do you have to be this way?</description>
      <content>&lt;blockquote&gt;
&lt;p&gt;Curse-loaded rant alert.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://cloud.google.com&#34;&gt;Google Cloud Platform&lt;/a&gt; is Google&amp;rsquo;s the direct competitor to &lt;a href=&#34;azure.com&#34;&gt;Microsoft Azure&lt;/a&gt; and &lt;a href=&#34;https://aws.amazon.com&#34;&gt;Amazon AWS&lt;/a&gt;. Among the services GCP offers is the Cloud Run API. Cloud Run hosts containerized applications, APIs, and microservices while being jam-packed with features like security, access control, port forwarding, loggings, and etc.&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
&lt;em&gt;Fig 1. The dashboard of a deployed Cloud Run project&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The Cloud Run service and platform are able to differentiate themselves from the others by offering a relatively modern and clean console which helps a lot with navigating through the options and functionalities. Compared to GCP, AWS and Azure seem clunky and the UI flow does not offer a clear path for a developer to deploy their projects. Most importantly, when enabling these services, AWS and Azure have complicated billing account assignment that just throws the user off track.&lt;/p&gt;
&lt;h1 id=&#34;the-spiral-into-despair-begins&#34;&gt;The spiral into despair begins&lt;/h1&gt;
&lt;p&gt;But Cloud Run is not without its own flaws. Very annoying ones at that. In my use case, I have a container of a Fresh Deno app (you can visit it &lt;a href=&#34;https://fresh.hoanganh.dev&#34;&gt;here&lt;/a&gt;) that I want to deploy with Cloud Run. It is web application framework that uses Deno (instead of node) as its runtime. Other than that, it is basically a single-page application. I started by building my container image locally and tagging with the proper scheme. Then, I used the &lt;code&gt;gcloud&lt;/code&gt; CLI to integrate the Google Container Registry with Docker so that when I push an image with the correct tagging scheme, it will be pushed to the registry without much overhead of managing accesses and tokens. Smooth sailing so far.&lt;/p&gt;
&lt;p&gt;After it has been uploaded to the registry, I can use the Cloud Run API console to deploy the container. With the default options set, unauthenticated web access granted, and proper port forwarded, off the service goes. First thing, there is no way to see what the API is doing with the image. The log verbosity is non-existent and the log tab is only for operational logs. So, no actual progress bar whatsoever and you would need to have your fingers crossed that nothing goes wrong. This happened to me the last time when I tried to deploy my &lt;a href=&#34;https://unix.hoanganh.dev&#34;&gt;Unix documentation site&lt;/a&gt;. The deployment went under and I did not know why because the error message was simply a build error because of unsupported architecture. After doing differential testings, I was able to isolate that the problem was due to the base image architecture. See, I was using my M1 MacBook to build and push the image so the base Ubuntu image was on ARM64 architecture. This was subsequently solved by going over the process on my x64 machine.&lt;/p&gt;
&lt;p&gt;Second, there is an option to assign a custom domain to the deployed container and this step is also a major pain. While the assignment of the custom domain went quickly enough, the lack of observability on the progresss is absolutely nerve-wracking due to the undesirably slow DNS propagation and SSL certificate generation. Mind you that I use Cloudflare. So, in my quest to find a better way to do custom domain (because the default &lt;code&gt;*.web.app&lt;/code&gt; is &lt;em&gt;kinda&lt;/em&gt; hard to remember ðŸ¤¡), I stumbled upon Firebase hosting with redirection.&lt;/p&gt;
&lt;h1 id=&#34;firebase-kinda-sucks-now&#34;&gt;Firebase kinda sucks now&lt;/h1&gt;
&lt;p&gt;Now, Firebase is a seemingly separated service component from all the over GCP stuff. But you can connect Firebase to your GCP project. BUT. I didn&amp;rsquo;t know that was a thing, so I naively created a new project with the hope of being able to redirect to the container service of another project ðŸ¤¡. Fumbled around a while, I managed to connect the GCP project of the deployed container to Firebase, but then it automatically upgraded the plan to the Blaze paid plan because &amp;ldquo;extend to use Google Cloud Platform resources&amp;rdquo; for whatever reasons. Well, ok, fine, I can live with that as long as the process takes less time. Boy, was I wrong, as I could not implement the redirection even though I followed the documentations and referenced other deeply nested docs.&lt;/p&gt;
&lt;p&gt;All right, I give up. Let&amp;rsquo;s abandon this and disable the Firebase then. Google says, &amp;ldquo;Fuck no.&amp;rdquo; This project is now permanently attached to the Firebase shit and there are no options to detach. I attempted to downgrade the Firebase to the free plan with hope that it would do the trick only to have it RE-ENABLED automatically by the system. At this point, the last thing to do is to delete the project from Firebase console and you&amp;rsquo;d think that is &amp;ldquo;da wey&amp;rdquo; right? Fuck no, again, you silly goof. Delete the project from Firebase also means your whole Google Cloud Platform project would be deleted. Trying to get support for this shit doesn&amp;rsquo;t work because it is not available for the basic tier support ðŸ¤¡.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;THE FUCK SHIT IS THIS?
I &lt;em&gt;calmly&lt;/em&gt; asked myself and Google.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;last-ditch-efforts&#34;&gt;Last ditch efforts&lt;/h1&gt;
&lt;p&gt;Ok, whatever, then I&amp;rsquo;ll just remove the service accounts in IAM. Wrong again, idiot with a foolish ambition. Removing those automatically created service accounts also somehow messed up the whole Cloud Run API access permissions. Now, I can&amp;rsquo;t even create a new deployment from the web console nor deploy a revision of the containerized app. Trying to solve this via the IAM console is another pain. Google in its infinite engineering wisdom does not provide a clear way of how administrators can manage access of default service agents and their roles. After 1-1.5 hour of reading docs, forums, community pages, I gave up and had to disable the whole API, losing all of my work, and start over.&lt;/p&gt;
&lt;h1 id=&#34;resolution&#34;&gt;Resolution&lt;/h1&gt;
&lt;p&gt;Starting over actually did the trick. The access policies were restored and I was able to re-deploy everything through the web console. HOWEVER, IT DID NOT HAVE TO BE THIS WAY. The time and effort cost was simply unjustified for such simple administrative operation. And it is not like the service is free or anything, I (will) pay for whatever I am consuming, so the shitty docs and non-existent support can go fuck themselves. Twice. Google engineering might be the best, but the customer service and business relation is clearly dogshit. If anything, I will probably sell my soul to Microsoft in the future.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My Dev Skill Improvement Roadmap for First Half of 2022</title>
      <link>https://blog.aaanh.com/posts/dev-goals-first-half-2022/</link>
      <pubDate>Sun, 06 Mar 2022 00:30:00 +0000</pubDate>
      
      <guid>https://blog.aaanh.com/posts/dev-goals-first-half-2022/</guid>
      <description>Lots to learn with so little time!</description>
      <content>&lt;blockquote&gt;
&lt;p&gt;This is a work in progress&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My tentative goal is to do software engineer in DevOps and SRE. Even though I am familiar with the stacks needed according to &lt;a href=&#34;https://roadmap.sh&#34;&gt;https://roadmap.sh&lt;/a&gt; for a DevOps/SRE, I am admittedly scatterbrained and quite disorganized and impulsive when it comes to actually learning the material. I might slightly be attention deficient, who knows, probably from devouring internet contents at a breakneck speed.&lt;/p&gt;
&lt;p&gt;So, let this post be a place where I get an anchor of some sort to remind what I need to do in order to achieve my mastery in the arts of orchestration (not the musical one!).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I embed the roadmap down here so that we don&amp;rsquo;t need to go back and forth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;lt;img src=&amp;ldquo;&lt;a href=&#34;https://roadmap.sh/roadmaps/devops.png%22&#34;&gt;https://roadmap.sh/roadmaps/devops.png&amp;quot;&lt;/a&gt; width={{ width: &amp;lsquo;640px&amp;rsquo; }} /&amp;gt;&lt;/p&gt;
&lt;h2 id=&#34;owned-skills&#34;&gt;Owned skills&lt;/h2&gt;
&lt;p&gt;I shall list the skill stacks that I have already acquired:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learn a programming language: (my best 3) c++, python, nodejs&lt;/li&gt;
&lt;li&gt;Understand different OS concepts
&lt;ul&gt;
&lt;li&gt;Process management&lt;/li&gt;
&lt;li&gt;Sockets&lt;/li&gt;
&lt;li&gt;POSIX basics&lt;/li&gt;
&lt;li&gt;Networking concepts&lt;/li&gt;
&lt;li&gt;I/O Management&lt;/li&gt;
&lt;li&gt;Virtualization&lt;/li&gt;
&lt;li&gt;Memory/Storage&lt;/li&gt;
&lt;li&gt;FS&lt;/li&gt;
&lt;li&gt;initd&lt;/li&gt;
&lt;li&gt;systemd&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Managing Servers
&lt;ul&gt;
&lt;li&gt;OS
&lt;ul&gt;
&lt;li&gt;Linux-based: Ubuntu, Debian, RHEL, Arch&lt;/li&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Terminal workflow
&lt;ul&gt;
&lt;li&gt;tmux&lt;/li&gt;
&lt;li&gt;bash scripting&lt;/li&gt;
&lt;li&gt;powershell&lt;/li&gt;
&lt;li&gt;editor: vim&lt;/li&gt;
&lt;li&gt;code compilation: gcc, make, gdb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Local System Monitoring and Process Management
&lt;ul&gt;
&lt;li&gt;ps, top, htop&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Networking
&lt;ul&gt;
&lt;li&gt;ping, nmap, tracert, ufw/iptables, dig, netstat&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Text manipulation
&lt;ul&gt;
&lt;li&gt;awk, grep, sed, sort, cat, echo, fmt, wc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web Servers
&lt;ul&gt;
&lt;li&gt;IIS&lt;/li&gt;
&lt;li&gt;Nginx&lt;/li&gt;
&lt;li&gt;Apache2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Networking, Security, and Protocols
&lt;ul&gt;
&lt;li&gt;Email: SMTP, IMAPS, DMARC, SPF, DKIM&lt;/li&gt;
&lt;li&gt;HTTP/S, FTP, SSL/TLS, SSH, port forwarding&lt;/li&gt;
&lt;li&gt;OSI model, DNS, BGP&lt;/li&gt;
&lt;li&gt;Whitelisting, DMZ, Firewall&lt;/li&gt;
&lt;li&gt;Reverse proxy, load balancer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Infrastructure as Code (IaC)
&lt;ul&gt;
&lt;li&gt;Containers: Docker&lt;/li&gt;
&lt;li&gt;Configuration Management: Ansible&lt;/li&gt;
&lt;li&gt;Container Orchestration: Kubernetes&lt;/li&gt;
&lt;li&gt;Provisioning: Terraform&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Infrastructure Monitoring
&lt;ul&gt;
&lt;li&gt;Grafana, Prometheus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CI/CD
&lt;ul&gt;
&lt;li&gt;Github Actions&lt;/li&gt;
&lt;li&gt;Azure DevOps&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logs Management
&lt;ul&gt;
&lt;li&gt;Splunk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cloud Providers
&lt;ul&gt;
&lt;li&gt;Type 1:
&lt;ul&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;Google Cloud&lt;/li&gt;
&lt;li&gt;Azure&lt;/li&gt;
&lt;li&gt;Heroku&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Type 2:
&lt;ul&gt;
&lt;li&gt;Linode&lt;/li&gt;
&lt;li&gt;Digital Ocean&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;skills-need-to-learn-and-improve&#34;&gt;Skills need to learn and improve&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;OS Concepts:
&lt;ul&gt;
&lt;li&gt;Threads and Concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;System Performance:
&lt;ul&gt;
&lt;li&gt;all&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web technologies:
&lt;ul&gt;
&lt;li&gt;WebSockets&lt;/li&gt;
&lt;li&gt;REST api, CRUD&lt;/li&gt;
&lt;li&gt;Webhooks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;IaC:
&lt;ul&gt;
&lt;li&gt;Docker (more advanced)&lt;/li&gt;
&lt;li&gt;Ansible (playbook to galaxy)&lt;/li&gt;
&lt;li&gt;Kubernetes (still beginner)&lt;/li&gt;
&lt;li&gt;Terraform (still beginner)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Networking and Security:
&lt;ul&gt;
&lt;li&gt;Reverse proxy (more advanced configs)&lt;/li&gt;
&lt;li&gt;Load balancer (still beginner)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logs management:
&lt;ul&gt;
&lt;li&gt;Splunk (more!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CI/CD:
&lt;ul&gt;
&lt;li&gt;Azure DevOps&lt;/li&gt;
&lt;li&gt;Circle CI&lt;/li&gt;
&lt;li&gt;Gitlab CI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cloud Providers:
&lt;ul&gt;
&lt;li&gt;AWS (backlog)&lt;/li&gt;
&lt;li&gt;Google Cloud (learning Cloud Engineer associate)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;I will need to try and complete at least the Google Cloud Engineer associate learning path, reinforce my knowledge on IaC tools and frameworks, learn more about Azure DevOps and Circle CI, and then finally complete a course on REST api framework (nestjs) and kubernetes.&lt;/p&gt;
&lt;p&gt;My goals seem a bit outlandish and probably unachievable and I will probably fail, but at the very least, I have a good image of what I need to do (or so it seems).&lt;/p&gt;
&lt;p&gt;On another note, I am tasked with a benchmark project for MLaaS providers by my research supervisor and so far, looks like it will play well into the whole shenanigans so I will have the chance to improve hollistically. We&amp;rsquo;ll see.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
